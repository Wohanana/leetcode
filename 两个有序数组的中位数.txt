题目描述：
给定两个大小分别为m和n的正序（从小到大）数组nums1和nums2.请你找出并返回这两个正序数组的中位数
进阶：设计一个时间复杂度为 O(log (m+n)) 的算法解决此问题

解析：
1.暴力解法：
(1)归并数组：先对两个有序数组进行归并，然后根据数组元素数的奇偶返回中位数
  代码：
  class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int m=nums1.length;
        int n=nums2.length;
        double ans;
        double[] merge_nums=new double[m+n];
        int i=0;
        int j=0;
        int k=0;
        while(i<m&&j<n){
            if(nums1[i]<=nums2[j]){
                merge_nums[k++]=nums1[i++];
            }else{
                merge_nums[k++]=nums2[j++];
            }
        }
        while(i<m)  merge_nums[k++]=nums1[i++];
        while(j<n)  merge_nums[k++]=nums2[j++];
        ans=((m+n)%2==0)?(merge_nums[(m+n)/2]+merge_nums[(m+n)/2-1])/2:merge_nums[(m+n)/2];
        return ans;
    }
}
(2)维护指针：不需要归并数组，两个数组维护两个指针，每次小的右移移位，根据奇偶返回中位数
    代码